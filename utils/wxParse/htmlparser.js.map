{"version":3,"sources":["utils/wxParse/htmlparser.js"],"names":["startTag","endTag","attr","empty","makeMap","block","inline","closeSelf","fillAttrs","special","HTMLParser","html","handler","index","chars","match","stack","last","length","indexOf","comment","substring","replace","parseEndTag","parseStartTag","text","RegExp","all","tag","tagName","rest","unary","toLowerCase","push","start","attrs","name","value","arguments","escaped","pos","i","end","str","obj","items","split","module","exports"],"mappings":"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","file":"htmlparser.js","sourcesContent":["/**\r\n * htmlParser改造自: https://github.com/blowsie/Pure-JavaScript-HTML5-Parser\r\n * author: Di (微信小程序开发工程师)\r\n * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)\r\n *               垂直微信小程序开发交流社区\r\n * github地址: https://github.com/icindy/wxParse\r\n * for: 微信小程序富文本解析\r\n * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184\r\n */\r\n/*eslint-disable */\r\n// Regular Expressions for parsing tags and attributes\r\nvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/,\r\n\tendTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/,\r\n\tattr = /([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\r\n\r\n// Empty Elements - HTML 5\r\nvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr\");\r\n\r\n// Block Elements - HTML 5\r\nvar block = makeMap(\"a,address,code,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\r\n\r\n// Inline Elements - HTML 5\r\nvar inline = makeMap(\"abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\r\n\r\n// Elements that you can, intentionally, leave open\r\n// (and which close themselves)\r\nvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\r\n\r\n// Attributes that have their values filled in disabled=\"disabled\"\r\nvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\r\n\r\n// Special Elements (can contain anything)\r\nvar special = makeMap(\"wxxxcode-style,script,style,view,scroll-view,block\");\r\n\r\nfunction HTMLParser(html, handler) {\r\n\tvar index, chars, match, stack = [], last = html;\r\n\tstack.last = function () {\r\n\t\treturn this[this.length - 1];\r\n\t};\r\n\r\n\twhile (html) {\r\n\t\tchars = true;\r\n\r\n\t\t// Make sure we're not in a script or style element\r\n\t\tif (!stack.last() || !special[stack.last()]) {\r\n\r\n\t\t\t// Comment\r\n\t\t\tif (html.indexOf(\"<!--\") == 0) {\r\n\t\t\t\tindex = html.indexOf(\"-->\");\r\n\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\tif (handler.comment)\r\n\t\t\t\t\t\thandler.comment(html.substring(4, index));\r\n\t\t\t\t\thtml = html.substring(index + 3);\r\n\t\t\t\t\tchars = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// end tag\r\n\t\t\t} else if (html.indexOf(\"</\") == 0) {\r\n\t\t\t\tmatch = html.match(endTag);\r\n\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\r\n\t\t\t\t\tchars = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start tag\r\n\t\t\t} else if (html.indexOf(\"<\") == 0) {\r\n\t\t\t\tmatch = html.match(startTag);\r\n\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\r\n\t\t\t\t\tchars = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (chars) {\r\n\t\t\t\tindex = html.indexOf(\"<\");\r\n\t\t\t\tvar text = ''\r\n\t\t\t\twhile (index === 0) {\r\n                                  text += \"<\";\r\n                                  html = html.substring(1);\r\n                                  index = html.indexOf(\"<\");\r\n\t\t\t\t}\r\n\t\t\t\ttext += index < 0 ? html : html.substring(0, index);\r\n\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\r\n\r\n\t\t\t\tif (handler.chars)\r\n\t\t\t\t\thandler.chars(text);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\thtml = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\r\n\t\t\t\ttext = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\r\n\t\t\t\tif (handler.chars)\r\n\t\t\t\t\thandler.chars(text);\r\n\r\n\t\t\t\treturn \"\";\r\n\t\t\t});\r\n\r\n\r\n\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t}\r\n\r\n\t\tif (html == last)\r\n\t\t\tthrow \"Parse Error: \" + html;\r\n\t\tlast = html;\r\n\t}\r\n\r\n\t// Clean up any remaining tags\r\n\tparseEndTag();\r\n\r\n\tfunction parseStartTag(tag, tagName, rest, unary) {\r\n\t\ttagName = tagName.toLowerCase();\r\n\r\n\t\tif (block[tagName]) {\r\n\t\t\twhile (stack.last() && inline[stack.last()]) {\r\n\t\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (closeSelf[tagName] && stack.last() == tagName) {\r\n\t\t\tparseEndTag(\"\", tagName);\r\n\t\t}\r\n\r\n\t\tunary = empty[tagName] || !!unary;\r\n\r\n\t\tif (!unary)\r\n\t\t\tstack.push(tagName);\r\n\r\n\t\tif (handler.start) {\r\n\t\t\tvar attrs = [];\r\n\r\n\t\t\trest.replace(attr, function (match, name) {\r\n\t\t\t\tvar value = arguments[2] ? arguments[2] :\r\n\t\t\t\t\targuments[3] ? arguments[3] :\r\n\t\t\t\t\t\targuments[4] ? arguments[4] :\r\n\t\t\t\t\t\t\tfillAttrs[name] ? name : \"\";\r\n\r\n\t\t\t\tattrs.push({\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tescaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') //\"\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (handler.start) {\r\n\t\t\t\thandler.start(tagName, attrs, unary);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parseEndTag(tag, tagName) {\r\n\t\t// If no tag name is provided, clean shop\r\n\t\tif (!tagName)\r\n\t\t\tvar pos = 0;\r\n\r\n\t\t// Find the closest opened tag of the same type\r\n\t\telse {\r\n\t\t\ttagName = tagName.toLowerCase();\r\n\t\t\tfor (var pos = stack.length - 1; pos >= 0; pos--)\r\n\t\t\t\tif (stack[pos] == tagName)\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (pos >= 0) {\r\n\t\t\t// Close all the open elements, up the stack\r\n\t\t\tfor (var i = stack.length - 1; i >= pos; i--)\r\n\t\t\t\tif (handler.end)\r\n\t\t\t\t\thandler.end(stack[i]);\r\n\r\n\t\t\t// Remove the open elements from the stack\r\n\t\t\tstack.length = pos;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nfunction makeMap(str) {\r\n\tvar obj = {}, items = str.split(\",\");\r\n\tfor (var i = 0; i < items.length; i++)\r\n\t\tobj[items[i]] = true;\r\n\treturn obj;\r\n}\r\n\r\nmodule.exports = HTMLParser;\r\n/*eslint-enable */\r\n"]}