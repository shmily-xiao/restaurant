{"version":3,"sources":["app.js"],"names":["useUrl","require","App","data","name","version","userInfo","other","login","obj","loginSuccess","success","console","log","loginFail","wx","res","fail","getUserInfo","getUserSuccess","getUserFail","showModal","title","content","showCancel","withCredentials","getSessionKey","requestInfo","request","url","serviceUrl","method","header","err","errMsg","complete","sessionCheck","that","checkSession","mainLogin","_this","callback","callback2","callback3","loginObj","params","code","session_key","setStorageSync","obj2","setData","onLaunch","onShow","onHide"],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * API module\r\n * @type {Object}\r\n * 用于将微信官方`API`封装为`Promise`方式\r\n * > 小程序支持以`CommonJS`规范组织代码结构\r\n */\r\n// const wechat = require('./utils/wechat')\r\nconst useUrl = require('./utils/service')\r\n// const Promise = require('./utils/bluebird')\r\n\r\nApp({\r\n  /**\r\n   * Global shared\r\n   * 可以定义任何成员，用于在整个应用中共享\r\n   */\r\n  data: {\r\n    name: 'WeApp Boilerplate',\r\n    version: '0.1.0',\r\n    userInfo: null\r\n  },\r\n\r\n  // 不是只能定义`data`，别的也可以\r\n  other: 'other variables',\r\n\r\n  /**\r\n   * 获取用户信息\r\n   * @return {Promise} 包含获取用户信息的`Promise`\r\n   */\r\n  // getUserInfo () {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     if (this.data.userInfo) return reject(this.data.userInfo)\r\n  //     wechat.login()\r\n  //       .then(() => wechat.getUserInfo())\r\n  //       .then(res => res.userInfo)\r\n  //       .then(info => { this.data.userInfo = info; wx.setStorageSync('userInfo', info) })\r\n  //       .then(info => resolve(info))\r\n  //       .catch(error => console.error('failed to get user info, error: ' + error))\r\n  //   })\r\n  // },\r\n  /**\r\n   *  用户微信授权登陆\r\n   */\r\n  login (obj) {\r\n    let loginSuccess = obj.success || function () { console.log('未传入success回调函数') }\r\n    let loginFail = obj.success || function () { console.log('未传入fail回调函数') }\r\n    wx.login({\r\n      success (res) {\r\n        // console.log(res.code)\r\n        loginSuccess(res)\r\n      },\r\n      fail (res) {\r\n        loginFail(res)\r\n      }\r\n    })\r\n  },\r\n  /**\r\n   * 获取用户微信信息\r\n   * @param obj\r\n   */\r\n  getUserInfo (obj) {\r\n    let getUserSuccess = obj.success || function () { console.log('未传入success回调函数') }\r\n    let getUserFail = obj.fail || function () {\r\n      wx.showModal({\r\n        title: '未提供权限',\r\n        content: '请删除小程序后重新打开并授权',\r\n        showCancel: false\r\n      })\r\n    }\r\n    wx.getUserInfo({\r\n      // 默认获取用户带加密数据的信息\r\n      withCredentials: obj.withCredentials || false,\r\n      success (res) {\r\n        getUserSuccess(res)\r\n      },\r\n      fail (res) {\r\n        getUserFail(res)\r\n      }\r\n    })\r\n  },\r\n  /**\r\n   * 服务器获取用户session_key\r\n   */\r\n  getSessionKey (obj) {\r\n    this.requestInfo(obj)\r\n  },\r\n  /**\r\n   * 向服务器请求信息\r\n   */\r\n  requestInfo (obj) {\r\n    wx.request({\r\n      url: obj.url || useUrl.serviceUrl.login,\r\n      method: obj.method || 'POST',\r\n      data: obj.data || {},\r\n      header: {\r\n        'content-type': obj.header || 'application/x-www-form-urlencoded'\r\n      },\r\n      success: obj.success || function () { console.log('未传入success回调函数') },\r\n      fail: obj.fail || function (err) { console.log('未传入fail回调函数,err:' + err.errMsg) },\r\n      complete: obj.complete || function () {}\r\n    })\r\n  },\r\n  /**\r\n   * 登陆态检查\r\n   */\r\n  sessionCheck () {\r\n    let that = this\r\n    wx.checkSession({\r\n      success () {\r\n        console.log('session有效')\r\n        // that.mainLogin()\r\n      },\r\n      fail () {\r\n        console.log('session失效')\r\n        that.mainLogin()\r\n      }\r\n    })\r\n  },\r\n  /**\r\n   * 主登陆函数\r\n   */\r\n  mainLogin (_this, callback, callback2, callback3) {\r\n    let that = this\r\n    let loginObj = {\r\n      success: function (params) {\r\n        // 获取用户登陆code\r\n        // console.log(res)\r\n        // 获取用户的session_key\r\n        // console.log('mainLogin' + res.code)\r\n        let obj = {\r\n          url: useUrl.serviceUrl.login + '?code=' + params.code,\r\n          method: 'GET',\r\n          // data: {\r\n          //   code: res.code\r\n          // },\r\n          header: 'application/json',\r\n          success (res) {\r\n            // console.log(useUrl.serviceUrl.login + '?code=' + params.code)\r\n            // console.log(res)\r\n            // console.log(res.data.data.session_key)\r\n            // session_key 存储\r\n            that.data.session_key = res.data.data.session_key\r\n            wx.setStorageSync('session_key', res.data.data.session_key)\r\n            if (callback) {\r\n              callback()\r\n            }\r\n            if (callback2) {\r\n              callback2()\r\n            }\r\n            if (callback3) {\r\n              callback3()\r\n            }\r\n          },\r\n          fail (res) {\r\n            console.log(res)\r\n          }\r\n        }\r\n        that.getSessionKey(obj)\r\n        // 获取用户信息\r\n        let obj2 = {\r\n          success (res) {\r\n            // console.log(res)\r\n            that.data.userInfo = res.userInfo\r\n            wx.setStorageSync('userInfo', res.userInfo)\r\n            if (_this) {\r\n              _this.setData({\r\n                userInfo: res.userInfo\r\n              })\r\n            }\r\n          }\r\n        }\r\n        that.getUserInfo(obj2)\r\n      }\r\n    }\r\n    that.login(loginObj)\r\n  },\r\n  /**\r\n   * 生命周期函数--监听小程序初始化\r\n   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）\r\n   */\r\n  onLaunch () {\r\n    // let that = this\r\n    // console.log(' ========== Application is launched ========== ')\r\n    // 登陆态检查\r\n    this.sessionCheck()\r\n    // 用户登陆\r\n  },\r\n  /**\r\n   * 生命周期函数--监听小程序显示\r\n   * 当小程序启动，或从后台进入前台显示，会触发 onShow\r\n   */\r\n  onShow () {\r\n    // console.log(' ========== Application is showed ========== ')\r\n  },\r\n  /**\r\n   * 生命周期函数--监听小程序隐藏\r\n   * 当小程序从前台进入后台，会触发 onHide\r\n   */\r\n  onHide () {\r\n    // console.log(' ========== Application is hid =====/===== ')\r\n  }\r\n})\r\n"]}